{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\AssignmentSubmissionApp-master\\\\demo\\\\front-end\\\\web\\\\src\\\\Login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLocalState } from \"../util/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  function sendLoginRequest() {\n    const reqBody = {\n      username: username,\n      password: password\n    };\n    fetch(\"api/auth/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(reqBody)\n    }).then(response => Promise.all([response.json(), response.headers])).then(_ref => {\n      let [body, headers] = _ref;\n      setJwt(headers.get(\"authorization\"));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}; //rsc\n\n\n_s(Login, \"lCqwhzS5R1/jeWHrSia2nuEMkOc=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useLocalState","Login","username","setUsername","password","setPassword","jwt","setJwt","sendLoginRequest","reqBody","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","get"],"sources":["C:/Users/User/Desktop/AssignmentSubmissionApp-master/demo/front-end/web/src/Login/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStorage\";\r\n\r\nconst Login = () => {\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst[jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n\tfunction sendLoginRequest(){\r\n\t\tconst reqBody = {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t};\r\n\r\n\t\t      fetch(\"api/auth/login\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"post\",\r\n        body: JSON.stringify(reqBody),\r\n      })\r\n        .then((response) => Promise.all([response.json(), response.headers]))\r\n        .then(([body, headers]) => {\r\n          setJwt(headers.get(\"authorization\"));\r\n        });\r\n\t}\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <label htmlFor=\"username\">Username:</label>\r\n        <input type=\"email\" id=\"username\" />\r\n      </div>\r\n\t\t<div>\r\n\t\t\t<label htmlFor=\"password\">password:</label>\r\n\t\t\t<input type=\"password\" id=\"password\"/>\r\n\t\t</div>\r\n    </>\r\n  );\r\n};\r\n//rsc\r\nexport default Login;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAK,CAACO,GAAD,EAAMC,MAAN,IAAgBP,aAAa,CAAC,EAAD,EAAK,KAAL,CAAlC;;EAEA,SAASQ,gBAAT,GAA2B;IAC1B,MAAMC,OAAO,GAAG;MACfP,QAAQ,EAAEA,QADK;MAEfE,QAAQ,EAAEA;IAFK,CAAhB;IAKMM,KAAK,CAAC,gBAAD,EAAmB;MACxBC,OAAO,EAAE;QACP,gBAAgB;MADT,CADe;MAIxBC,MAAM,EAAE,MAJgB;MAKxBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;IALkB,CAAnB,CAAL,CAOCO,IAPD,CAOOC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAY,CAACF,QAAQ,CAACG,IAAT,EAAD,EAAkBH,QAAQ,CAACN,OAA3B,CAAZ,CAPpB,EAQCK,IARD,CAQM,QAAqB;MAAA,IAApB,CAACH,IAAD,EAAOF,OAAP,CAAoB;MACzBJ,MAAM,CAACI,OAAO,CAACU,GAAR,CAAY,eAAZ,CAAD,CAAN;IACD,CAVD;EAWN;;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,OAAZ;QAAoB,EAAE,EAAC;MAAvB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKF;MAAA,wBACC;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAEC;QAAO,IAAI,EAAC,UAAZ;QAAuB,EAAE,EAAC;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFD;IAAA;MAAA;MAAA;MAAA;IAAA,QALE;EAAA,gBADF;AAYD,CAtCD,C,CAuCA;;;GAvCMpB,K;UAKgBD,a;;;KALhBC,K;AAwCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}